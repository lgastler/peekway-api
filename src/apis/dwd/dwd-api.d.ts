/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/stationOverviewExtended": {
    /**
     * Wetterstation Daten
     * @description Query für eine oder mehrere Wetterstationen
     */
    get: {
      parameters: {
        query: {
          /**
           * @description Beim Parameter stationsIds handelt es sich um die Stationskennungen des DWD. Die Liste der Stationskennungen kann z.B. [hier](https://www.dwd.de/DE/leistungen/klimadatendeutschland/stationsliste.html) eingesehen werden.
           * @example [
           *   10865,
           *   "G005"
           * ]
           */
          stationIds?: (string | number)[];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["StationOverview"];
          };
        };
        /** @description Server Error */
        400: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
      };
    };
  };
  "/crowd_meldungen_overview_v2.json": {
    /**
     * DWD Crowdwettermeldungen
     * @description Der DWD erlaubt Usern das aktuelle Wetter zu melden. In der Response befinden sich alle aktuellen Meldungen
     */
    get: {
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["CROWDMeldung"];
          };
        };
        /** @description Not Found */
        404: never;
      };
    };
  };
  "/warnings_nowcast.json": {
    /** Nowcast Warnungen (deutsch) */
    get: {
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["WarningNowcast"];
          };
        };
        /** @description Not Found */
        404: never;
      };
    };
  };
  "/warnings_nowcast_en.json": {
    /** Nowcast Warnungen (englisch) */
    get: {
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["WarningNowcast"];
          };
        };
        /** @description Not Found */
        404: never;
      };
    };
  };
  "/gemeinde_warnings_v2.json": {
    /** Gemeinde Unwetterwarnungen (Deutsch) */
    get: {
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["GemeindeWarnings"];
          };
        };
        /** @description Not Found */
        404: never;
      };
    };
  };
  "/gemeinde_warnings_v2_en.json": {
    /** Gemeinde Unwetterwarnungen (Englisch) */
    get: {
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["GemeindeWarnings"];
          };
        };
        /** @description Not Found */
        404: never;
      };
    };
  };
  "/warnings_coast.json": {
    /** Küsten Unwetterwarnungen (deutsch) */
    get: {
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["WarningCoast"];
          };
        };
        /** @description Not Found */
        404: never;
      };
    };
  };
  "/warnings_coast_en.json": {
    /** Küsten Unwetterwarnungen (englisch) */
    get: {
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["WarningCoast"];
          };
        };
        /** @description Not Found */
        404: never;
      };
    };
  };
  "/sea_warning_text.json": {
    /** Hochsee Unwetterwarnungen als Text */
    get: {
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/text": string;
          };
        };
        /** @description Not Found */
        404: never;
      };
    };
  };
  "/alpen_forecast_text_dwms.json": {
    /** Alpen Wettervorhersage als Text */
    get: {
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/text": string;
          };
        };
        /** @description Not Found */
        404: never;
      };
    };
  };
  "/warnings_lawine.json": {
    /** Alpen Wettervorhersage als Text */
    get: {
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": string;
          };
        };
        /** @description Not Found */
        404: never;
      };
    };
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    WarningNowcast: {
      /** Format: int64 */
      time?: number;
      warnings?: {
        /** Format: int32 */
        type?: number;
        /** Format: int32 */
        level?: number;
        /** Format: int64 */
        start?: number;
        /** Format: int64 */
        end?: number;
        states?: number[];
        regions?: {
          polygon?: number[];
          triangles?: number[];
        }[];
        urls?: string[];
        bn?: boolean;
        isVorabinfo?: boolean;
        instruction?: string | null;
        description?: string;
        descriptionText?: string;
        event?: string;
        headLine?: string;
      }[];
      binnenSee?: string | null;
    };
    StationOverview: {
      [key: string]: {
        forecast1?: {
          stationId?: string;
          /** Format: int64 */
          start?: number;
          /** Format: int32 */
          timeStep?: number;
          temperature?: number[];
          temperatureStd?: number[];
          windSpeed?: string | null;
          windDirection?: string | null;
          windGust?: string | null;
          icon?: number[];
          precipitationTotal?: number[];
          precipitationProbablity?: string | null;
          precipitationProbablityIndex?: string | null;
        };
        forecast2?: {
          stationId?: string;
          /** Format: int64 */
          start?: number;
          /** Format: int32 */
          timeStep?: number;
          temperature?: number[];
          temperatureStd?: number[];
          windSpeed?: string | null;
          windDirection?: string | null;
          windGust?: string | null;
          icon?: number[];
          precipitationTotal?: number[];
          precipitationProbablity?: string | null;
          precipitationProbablityIndex?: string | null;
        };
        forecastStart?: string | null;
        days?: {
          stationId?: string | null;
          /** Format: date */
          dayDate?: string;
          /** Format: int32 */
          temperatureMin?: number;
          /** Format: int32 */
          temperatureMax?: number;
          /** Format: int32 */
          icon?: number;
          icon1?: string | null;
          icon2?: string | null;
          /** Format: int32 */
          precipitation?: number;
          /** Format: int32 */
          windSpeed?: number;
          /** Format: int32 */
          windGust?: number;
          /** Format: int32 */
          windDirection?: number;
          /** Format: int32 */
          sunshine?: number;
        }[];
        warnings?: Record<string, never>[];
        threeHourSummaries?: string | null;
      };
    };
    CROWDMeldung: {
      /** Format: int64 */
      start?: number;
      /** Format: int64 */
      end?: number;
      highestSeverities?: {
        category?: string;
        auspraegung?: string;
      }[];
      meldungen?: {
        /** Format: int32 */
        meldungId?: number;
        /** Format: int64 */
        timestamp?: number;
        lat?: string;
        lon?: string;
        place?: string;
        category?: string;
        auspraegung?: string;
        zusatzAttribute?: Record<string, never>[];
      }[];
    };
    GemeindeWarnings: {
      /** Format: int64 */
      time?: number;
      warnings?: {
        /** Format: int32 */
        type?: number;
        /** Format: int32 */
        level?: number;
        /** Format: int64 */
        start?: number;
        /** Format: int64 */
        end?: number;
        regions?: {
          polygon?: number[];
          triangles?: number[];
        }[];
        urls?: Record<string, never>[];
        bn?: boolean;
        isVorabinfo?: boolean;
        description?: string;
        descriptionText?: string;
        event?: string;
        headLine?: string;
      }[];
      binnenSee?: {
        209901000?: {
          /** Format: int32 */
          type?: number;
          /** Format: int32 */
          level?: number;
          /** Format: int64 */
          start?: number;
          bn?: boolean;
          instruction?: string;
          description?: string;
          descriptionText?: string;
          event?: string;
          headline?: string;
        }[];
      };
    };
    Error: {
      /**
       * Format: int64
       * @example 1630077980735
       */
      timestamp?: number;
      /**
       * Format: int32
       * @example 404
       */
      status?: number;
      /** @example Not Found */
      error?: string;
      /** @example An error occured */
      message?: string;
      /** @example /v30/alpen_forecast_text_dwms.json */
      path?: string;
    };
    WarningCoast: {
      /** Format: int64 */
      time?: number;
      warnings?: {
        501000007?: {
          /** Format: int32 */
          type?: number;
          /** Format: int32 */
          level?: number;
          bn?: boolean;
          instruction?: string;
          description?: string;
          descriptionText?: string;
          event?: string;
          headline?: string;
        }[];
      };
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type external = Record<string, never>;

export type operations = Record<string, never>;
